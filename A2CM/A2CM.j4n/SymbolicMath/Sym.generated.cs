//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by jni4net. See http://jni4net.sourceforge.net/ 
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASquared.SymbolicMath {
    
    
    #region Component Designer generated code 
    public partial class Sym_ {
        
        public static global::java.lang.Class _class {
            get {
                return global::ASquared.SymbolicMath.@__Sym.staticClass;
            }
        }
    }
    #endregion
    
    #region Component Designer generated code 
    [global::net.sf.jni4net.attributes.JavaProxyAttribute(typeof(global::ASquared.SymbolicMath.Sym), typeof(global::ASquared.SymbolicMath.Sym_))]
    [global::net.sf.jni4net.attributes.ClrWrapperAttribute(typeof(global::ASquared.SymbolicMath.Sym), typeof(global::ASquared.SymbolicMath.Sym_))]
    internal sealed partial class @__Sym : global::java.lang.Object {
        
        internal new static global::java.lang.Class staticClass;
        
        private @__Sym(global::net.sf.jni4net.jni.JNIEnv @__env) : 
                base(@__env) {
        }
        
        private static void InitJNI(global::net.sf.jni4net.jni.JNIEnv @__env, java.lang.Class @__class) {
            global::ASquared.SymbolicMath.@__Sym.staticClass = @__class;
        }
        
        private static global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod> @__Init(global::net.sf.jni4net.jni.JNIEnv @__env, global::java.lang.Class @__class) {
            global::System.Type @__type = typeof(__Sym);
            global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod> methods = new global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod>();
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "Sin", "Sin0", "(Lasquared/symbolicmath/Symbol;)Lasquared/symbolicmath/Symbol;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "Cos", "Cos1", "(Lasquared/symbolicmath/Symbol;)Lasquared/symbolicmath/Symbol;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "Tan", "Tan2", "(Lasquared/symbolicmath/Symbol;)Lasquared/symbolicmath/Symbol;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "Csc", "Csc3", "(Lasquared/symbolicmath/Symbol;)Lasquared/symbolicmath/Symbol;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "Sec", "Sec4", "(Lasquared/symbolicmath/Symbol;)Lasquared/symbolicmath/Symbol;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "Cot", "Cot5", "(Lasquared/symbolicmath/Symbol;)Lasquared/symbolicmath/Symbol;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "BuildPolynomial", "BuildPolynomial6", "([DLasquared/symbolicmath/Symbol;)Lasquared/symbolicmath/Symbol;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "FitPolynomial", "FitPolynomial7", "([D[DLasquared/symbolicmath/Symbol;D)Lasquared/symbolicmath/Symbol;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "FitPolynomial", "FitPolynomial8", "([D[DLasquared/symbolicmath/Symbol;DLnet/sf/jni4net/Out;)Lasquared/symbolicmath/S" +
                        "ymbol;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "FitPolynomial", "FitPolynomial9", "([D[DLasquared/symbolicmath/Symbol;I)Lasquared/symbolicmath/Symbol;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "PolynomialGoodnessOfFit", "PolynomialGoodnessOfFit10", "([D[DLasquared/symbolicmath/Symbol;D)Ljava/lang/String;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "PolynomialGoodnessOfFit", "PolynomialGoodnessOfFit11", "([D[DLasquared/symbolicmath/Symbol;I)Ljava/lang/String;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "PolynomialGoodnessOfFit", "PolynomialGoodnessOfFit12", "([D[DLasquared/symbolicmath/Symbol;Lasquared/symbolicmath/Symbol;)Ljava/lang/Stri" +
                        "ng;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "Log", "Log13", "(Lasquared/symbolicmath/Symbol;Lasquared/symbolicmath/Symbol;)Lasquared/symbolicm" +
                        "ath/Symbol;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "Log", "Log14", "(Lasquared/symbolicmath/Symbol;)Lasquared/symbolicmath/Symbol;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "Ln", "Ln15", "(Lasquared/symbolicmath/Symbol;)Lasquared/symbolicmath/Symbol;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "Exp", "Exp16", "(Lasquared/symbolicmath/Symbol;)Lasquared/symbolicmath/Symbol;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "Diff", "Diff17", "(Lasquared/symbolicmath/Symbol;Ljava/lang/String;I)Lasquared/symbolicmath/Symbol;" +
                        ""));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "Diff", "Diff18", "(Lasquared/symbolicmath/Symbol;)Lasquared/symbolicmath/Symbol;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "Diff", "Diff19", "(Lasquared/symbolicmath/Symbol;Ljava/lang/String;)Lasquared/symbolicmath/Symbol;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "Diff", "Diff20", "(Lasquared/symbolicmath/Symbol;I)Lasquared/symbolicmath/Symbol;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "Gradient", "Gradient21", "(Lasquared/symbolicmath/Symbol;[Ljava/lang/String;)[Lasquared/symbolicmath/Symbol" +
                        ";"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "Root", "Root22", "(Lasquared/symbolicmath/Symbol;Lasquared/symbolicmath/Symbol;)Lasquared/symbolicm" +
                        "ath/Symbol;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "SquareRoot", "SquareRoot23", "(Lasquared/symbolicmath/Symbol;)Lasquared/symbolicmath/Symbol;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "CubeRoot", "CubeRoot24", "(Lasquared/symbolicmath/Symbol;)Lasquared/symbolicmath/Symbol;"));
            return methods;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle Sin0(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle operand) {
            // (Lasquared/symbolicmath/Symbol;)Lasquared/symbolicmath/Symbol;
            // (LASquared/SymbolicMath/Symbol;)LASquared/SymbolicMath/Symbol;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::ASquared.SymbolicMath.Symbol>(@__env, global::ASquared.SymbolicMath.Sym.Sin(global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::ASquared.SymbolicMath.Symbol>(@__env, operand)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle Cos1(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle operand) {
            // (Lasquared/symbolicmath/Symbol;)Lasquared/symbolicmath/Symbol;
            // (LASquared/SymbolicMath/Symbol;)LASquared/SymbolicMath/Symbol;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::ASquared.SymbolicMath.Symbol>(@__env, global::ASquared.SymbolicMath.Sym.Cos(global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::ASquared.SymbolicMath.Symbol>(@__env, operand)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle Tan2(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle operand) {
            // (Lasquared/symbolicmath/Symbol;)Lasquared/symbolicmath/Symbol;
            // (LASquared/SymbolicMath/Symbol;)LASquared/SymbolicMath/Symbol;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::ASquared.SymbolicMath.Symbol>(@__env, global::ASquared.SymbolicMath.Sym.Tan(global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::ASquared.SymbolicMath.Symbol>(@__env, operand)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle Csc3(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle operand) {
            // (Lasquared/symbolicmath/Symbol;)Lasquared/symbolicmath/Symbol;
            // (LASquared/SymbolicMath/Symbol;)LASquared/SymbolicMath/Symbol;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::ASquared.SymbolicMath.Symbol>(@__env, global::ASquared.SymbolicMath.Sym.Csc(global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::ASquared.SymbolicMath.Symbol>(@__env, operand)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle Sec4(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle operand) {
            // (Lasquared/symbolicmath/Symbol;)Lasquared/symbolicmath/Symbol;
            // (LASquared/SymbolicMath/Symbol;)LASquared/SymbolicMath/Symbol;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::ASquared.SymbolicMath.Symbol>(@__env, global::ASquared.SymbolicMath.Sym.Sec(global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::ASquared.SymbolicMath.Symbol>(@__env, operand)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle Cot5(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle operand) {
            // (Lasquared/symbolicmath/Symbol;)Lasquared/symbolicmath/Symbol;
            // (LASquared/SymbolicMath/Symbol;)LASquared/SymbolicMath/Symbol;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::ASquared.SymbolicMath.Symbol>(@__env, global::ASquared.SymbolicMath.Sym.Cot(global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::ASquared.SymbolicMath.Symbol>(@__env, operand)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle BuildPolynomial6(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle a, global::net.sf.jni4net.utils.JniLocalHandle x) {
            // ([DLasquared/symbolicmath/Symbol;)Lasquared/symbolicmath/Symbol;
            // ([DLASquared/SymbolicMath/Symbol;)LASquared/SymbolicMath/Symbol;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::ASquared.SymbolicMath.Symbol>(@__env, global::ASquared.SymbolicMath.Sym.BuildPolynomial(global::net.sf.jni4net.utils.Convertor.ArrayPrimJ2Cdouble(@__env, a), global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::ASquared.SymbolicMath.Symbol>(@__env, x)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle FitPolynomial7(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle xVals, global::net.sf.jni4net.utils.JniLocalHandle yVals, global::net.sf.jni4net.utils.JniLocalHandle x, double targetR2) {
            // ([D[DLasquared/symbolicmath/Symbol;D)Lasquared/symbolicmath/Symbol;
            // ([D[DLASquared/SymbolicMath/Symbol;D)LASquared/SymbolicMath/Symbol;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::ASquared.SymbolicMath.Symbol>(@__env, global::ASquared.SymbolicMath.Sym.FitPolynomial(global::net.sf.jni4net.utils.Convertor.ArrayPrimJ2Cdouble(@__env, xVals), global::net.sf.jni4net.utils.Convertor.ArrayPrimJ2Cdouble(@__env, yVals), global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::ASquared.SymbolicMath.Symbol>(@__env, x), targetR2));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle FitPolynomial8(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle xVals, global::net.sf.jni4net.utils.JniLocalHandle yVals, global::net.sf.jni4net.utils.JniLocalHandle x, double targetR2, global::net.sf.jni4net.utils.JniLocalHandle perf) {
            // ([D[DLasquared/symbolicmath/Symbol;DLnet/sf/jni4net/Out;)Lasquared/symbolicmath/Symbol;
            // ([D[DLASquared/SymbolicMath/Symbol;DLASquared/ModelStatistics/ModelPerformance;)LASquared/SymbolicMath/Symbol;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::ASquared.ModelStatistics.ModelPerformance @__out_perf;
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::ASquared.SymbolicMath.Symbol>(@__env, global::ASquared.SymbolicMath.Sym.FitPolynomial(global::net.sf.jni4net.utils.Convertor.ArrayPrimJ2Cdouble(@__env, xVals), global::net.sf.jni4net.utils.Convertor.ArrayPrimJ2Cdouble(@__env, yVals), global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::ASquared.SymbolicMath.Symbol>(@__env, x), targetR2, out __out_perf));
            net.sf.jni4net.Out.SetValue<global::ASquared.ModelStatistics.ModelPerformance>(@__env, perf, @__out_perf);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle FitPolynomial9(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle xVals, global::net.sf.jni4net.utils.JniLocalHandle yVals, global::net.sf.jni4net.utils.JniLocalHandle x, int order) {
            // ([D[DLasquared/symbolicmath/Symbol;I)Lasquared/symbolicmath/Symbol;
            // ([D[DLASquared/SymbolicMath/Symbol;I)LASquared/SymbolicMath/Symbol;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::ASquared.SymbolicMath.Symbol>(@__env, global::ASquared.SymbolicMath.Sym.FitPolynomial(global::net.sf.jni4net.utils.Convertor.ArrayPrimJ2Cdouble(@__env, xVals), global::net.sf.jni4net.utils.Convertor.ArrayPrimJ2Cdouble(@__env, yVals), global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::ASquared.SymbolicMath.Symbol>(@__env, x), order));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle PolynomialGoodnessOfFit10(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle xVals, global::net.sf.jni4net.utils.JniLocalHandle yVals, global::net.sf.jni4net.utils.JniLocalHandle x, double targetR2) {
            // ([D[DLasquared/symbolicmath/Symbol;D)Ljava/lang/String;
            // ([D[DLASquared/SymbolicMath/Symbol;D)LSystem/String;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2JString(@__env, global::ASquared.SymbolicMath.Sym.PolynomialGoodnessOfFit(global::net.sf.jni4net.utils.Convertor.ArrayPrimJ2Cdouble(@__env, xVals), global::net.sf.jni4net.utils.Convertor.ArrayPrimJ2Cdouble(@__env, yVals), global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::ASquared.SymbolicMath.Symbol>(@__env, x), targetR2));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle PolynomialGoodnessOfFit11(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle xVals, global::net.sf.jni4net.utils.JniLocalHandle yVals, global::net.sf.jni4net.utils.JniLocalHandle x, int order) {
            // ([D[DLasquared/symbolicmath/Symbol;I)Ljava/lang/String;
            // ([D[DLASquared/SymbolicMath/Symbol;I)LSystem/String;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2JString(@__env, global::ASquared.SymbolicMath.Sym.PolynomialGoodnessOfFit(global::net.sf.jni4net.utils.Convertor.ArrayPrimJ2Cdouble(@__env, xVals), global::net.sf.jni4net.utils.Convertor.ArrayPrimJ2Cdouble(@__env, yVals), global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::ASquared.SymbolicMath.Symbol>(@__env, x), order));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle PolynomialGoodnessOfFit12(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle xVals, global::net.sf.jni4net.utils.JniLocalHandle yVals, global::net.sf.jni4net.utils.JniLocalHandle fxn, global::net.sf.jni4net.utils.JniLocalHandle x) {
            // ([D[DLasquared/symbolicmath/Symbol;Lasquared/symbolicmath/Symbol;)Ljava/lang/String;
            // ([D[DLASquared/SymbolicMath/Symbol;LASquared/SymbolicMath/Symbol;)LSystem/String;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2JString(@__env, global::ASquared.SymbolicMath.Sym.PolynomialGoodnessOfFit(global::net.sf.jni4net.utils.Convertor.ArrayPrimJ2Cdouble(@__env, xVals), global::net.sf.jni4net.utils.Convertor.ArrayPrimJ2Cdouble(@__env, yVals), global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::ASquared.SymbolicMath.Symbol>(@__env, fxn), global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::ASquared.SymbolicMath.Symbol>(@__env, x)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle Log13(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle operand, global::net.sf.jni4net.utils.JniLocalHandle logBase) {
            // (Lasquared/symbolicmath/Symbol;Lasquared/symbolicmath/Symbol;)Lasquared/symbolicmath/Symbol;
            // (LASquared/SymbolicMath/Symbol;LASquared/SymbolicMath/Symbol;)LASquared/SymbolicMath/Symbol;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::ASquared.SymbolicMath.Symbol>(@__env, global::ASquared.SymbolicMath.Sym.Log(global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::ASquared.SymbolicMath.Symbol>(@__env, operand), global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::ASquared.SymbolicMath.Symbol>(@__env, logBase)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle Log14(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle operand) {
            // (Lasquared/symbolicmath/Symbol;)Lasquared/symbolicmath/Symbol;
            // (LASquared/SymbolicMath/Symbol;)LASquared/SymbolicMath/Symbol;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::ASquared.SymbolicMath.Symbol>(@__env, global::ASquared.SymbolicMath.Sym.Log(global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::ASquared.SymbolicMath.Symbol>(@__env, operand)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle Ln15(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle operand) {
            // (Lasquared/symbolicmath/Symbol;)Lasquared/symbolicmath/Symbol;
            // (LASquared/SymbolicMath/Symbol;)LASquared/SymbolicMath/Symbol;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::ASquared.SymbolicMath.Symbol>(@__env, global::ASquared.SymbolicMath.Sym.Ln(global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::ASquared.SymbolicMath.Symbol>(@__env, operand)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle Exp16(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle operand) {
            // (Lasquared/symbolicmath/Symbol;)Lasquared/symbolicmath/Symbol;
            // (LASquared/SymbolicMath/Symbol;)LASquared/SymbolicMath/Symbol;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::ASquared.SymbolicMath.Symbol>(@__env, global::ASquared.SymbolicMath.Sym.Exp(global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::ASquared.SymbolicMath.Symbol>(@__env, operand)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle Diff17(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle operand, global::net.sf.jni4net.utils.JniLocalHandle variable, int order) {
            // (Lasquared/symbolicmath/Symbol;Ljava/lang/String;I)Lasquared/symbolicmath/Symbol;
            // (LASquared/SymbolicMath/Symbol;LSystem/String;I)LASquared/SymbolicMath/Symbol;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::ASquared.SymbolicMath.Symbol>(@__env, global::ASquared.SymbolicMath.Sym.Diff(global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::ASquared.SymbolicMath.Symbol>(@__env, operand), global::net.sf.jni4net.utils.Convertor.StrongJ2CString(@__env, variable), order));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle Diff18(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle operand) {
            // (Lasquared/symbolicmath/Symbol;)Lasquared/symbolicmath/Symbol;
            // (LASquared/SymbolicMath/Symbol;)LASquared/SymbolicMath/Symbol;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::ASquared.SymbolicMath.Symbol>(@__env, global::ASquared.SymbolicMath.Sym.Diff(global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::ASquared.SymbolicMath.Symbol>(@__env, operand)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle Diff19(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle operand, global::net.sf.jni4net.utils.JniLocalHandle variable) {
            // (Lasquared/symbolicmath/Symbol;Ljava/lang/String;)Lasquared/symbolicmath/Symbol;
            // (LASquared/SymbolicMath/Symbol;LSystem/String;)LASquared/SymbolicMath/Symbol;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::ASquared.SymbolicMath.Symbol>(@__env, global::ASquared.SymbolicMath.Sym.Diff(global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::ASquared.SymbolicMath.Symbol>(@__env, operand), global::net.sf.jni4net.utils.Convertor.StrongJ2CString(@__env, variable)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle Diff20(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle operand, int order) {
            // (Lasquared/symbolicmath/Symbol;I)Lasquared/symbolicmath/Symbol;
            // (LASquared/SymbolicMath/Symbol;I)LASquared/SymbolicMath/Symbol;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::ASquared.SymbolicMath.Symbol>(@__env, global::ASquared.SymbolicMath.Sym.Diff(global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::ASquared.SymbolicMath.Symbol>(@__env, operand), order));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle Gradient21(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle operand, global::net.sf.jni4net.utils.JniLocalHandle variables) {
            // (Lasquared/symbolicmath/Symbol;[Ljava/lang/String;)[Lasquared/symbolicmath/Symbol;
            // (LASquared/SymbolicMath/Symbol;[LSystem/String;)[LASquared/SymbolicMath/Symbol;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            @__return = global::net.sf.jni4net.utils.Convertor.ArrayStrongC2Jp<global::ASquared.SymbolicMath.Symbol[], global::ASquared.SymbolicMath.Symbol>(@__env, global::ASquared.SymbolicMath.Sym.Gradient(global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::ASquared.SymbolicMath.Symbol>(@__env, operand), global::net.sf.jni4net.utils.Convertor.ArrayStrongJ2CString(@__env, variables)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle Root22(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle operand, global::net.sf.jni4net.utils.JniLocalHandle root) {
            // (Lasquared/symbolicmath/Symbol;Lasquared/symbolicmath/Symbol;)Lasquared/symbolicmath/Symbol;
            // (LASquared/SymbolicMath/Symbol;LASquared/SymbolicMath/Symbol;)LASquared/SymbolicMath/Symbol;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::ASquared.SymbolicMath.Symbol>(@__env, global::ASquared.SymbolicMath.Sym.Root(global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::ASquared.SymbolicMath.Symbol>(@__env, operand), global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::ASquared.SymbolicMath.Symbol>(@__env, root)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle SquareRoot23(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle operand) {
            // (Lasquared/symbolicmath/Symbol;)Lasquared/symbolicmath/Symbol;
            // (LASquared/SymbolicMath/Symbol;)LASquared/SymbolicMath/Symbol;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::ASquared.SymbolicMath.Symbol>(@__env, global::ASquared.SymbolicMath.Sym.SquareRoot(global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::ASquared.SymbolicMath.Symbol>(@__env, operand)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle CubeRoot24(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle operand) {
            // (Lasquared/symbolicmath/Symbol;)Lasquared/symbolicmath/Symbol;
            // (LASquared/SymbolicMath/Symbol;)LASquared/SymbolicMath/Symbol;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::ASquared.SymbolicMath.Symbol>(@__env, global::ASquared.SymbolicMath.Sym.CubeRoot(global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::ASquared.SymbolicMath.Symbol>(@__env, operand)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        new internal sealed class ContructionHelper : global::net.sf.jni4net.utils.IConstructionHelper {
            
            public global::net.sf.jni4net.jni.IJvmProxy CreateProxy(global::net.sf.jni4net.jni.JNIEnv @__env) {
                return new global::ASquared.SymbolicMath.@__Sym(@__env);
            }
        }
    }
    #endregion
}
